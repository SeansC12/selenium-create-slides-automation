# Generated by Selenium IDE
import time
import re
from dotenv import load_dotenv
import os
from selenium import webdriver
from seleniumbase import Driver
from selenium.webdriver.common.by import By
from selenium.webdriver.support.wait import WebDriverWait
from selenium.webdriver.common.keys import Keys

load_dotenv()

class GammaSlideCreator():
    def setup_method(self):
        options = webdriver.ChromeOptions()
        options.page_load_strategy = "normal"
        # options.add_argument("--headless=new")

        self.driver = Driver(uc=True, headless=False, binary_location="/Applications/Brave Browser.app/Contents/MacOS/Brave Browser")
        self.wait = WebDriverWait(self.driver, timeout=15)

        # self.driver.uc_open_with_reconnect("https://gamma.app/signin", reconnect_time=6)

        # self.driver.uc_gui_click_captcha()

        self.vars = {}
    
    def login_with_email_and_pwd(self, email, password):
        # Step # | name | target | value
        # 2 | setWindowSize | 2560x1342 | 
        self.driver.set_window_size(2560, 1342)
        # 3 | click | id=email | 
        self.driver.find_element(By.ID, "email").click()
        # 4 | type | id=email | sean.ulric.chua@gmail.com
        self.driver.find_element(By.ID, "email").send_keys(email)
        # 5 | type | id=password | ThunderLightning12#
        self.driver.find_element(By.ID, "password").send_keys(password)
        time.sleep(3)
        self.driver.find_element(By.ID, "password").send_keys(Keys.ENTER)
        time.sleep(5)

        try:
            self.driver.find_element(By.ID, "password").send_keys(Keys.ENTER)
        except Exception as e:
            print(e)
        # self.driver.find_element(By.XPATH, "//button[contains(., \"Sign in\")]").click()

    def teardown_method(self, method):
        self.driver.quit()
    
    def create_slides(self):
        # self.driver.get("https://gamma.app/signin")
        self.driver.uc_open_with_reconnect("https://gamma.app/signin", reconnect_time=6)

        self.driver.uc_gui_click_captcha()
        
        slide_outline = ""
        with open('slide_outline.txt', 'r') as f:
            slide_outline = f.read()
        
        email = os.environ.get("GAMMA_EMAIL")
        password = os.environ.get("GAMMA_PASSWORD")
        
        self.login_with_email_and_pwd(email, password)

        time.sleep(5)
        revealed = self.driver.find_element(By.XPATH, "//button[@data-testid=\'create-from-ai-button\']")
        self.wait.until(lambda _: revealed.is_displayed())

        # Create new
        self.driver.find_element(By.XPATH, "//button[@data-testid=\'create-from-ai-button\' and contains(., \'Create new\')]").click()
        
        # Paste in text
        time.sleep(3)
        self.driver.find_element(By.XPATH, "//h2[contains(., \'Paste in text\')]").click()
        
        # Input field (content editable div)
        time.sleep(3)
        self.driver.find_element(By.XPATH, "//div[@data-testid=\'ai-content-editor\']").click()
        # self.driver.find_element(By.CSS_SELECTOR, ".tiptap").click()
        
        time.sleep(3)
        element = self.driver.find_element(By.XPATH, "//div[@data-testid=\'ai-content-editor\']")
        # interval = 50
        # lines = [slide_outline[i:i+interval] for i in range(0, len(slide_outline), interval)]

        for i in slide_outline.split("\\n"):
            element.send_keys(i)
            element.send_keys(Keys.RETURN)
        # self.driver.execute_script("if(arguments[0].contentEditable === 'true') {arguments[0].innerHTML = '" + slide_outline + "'}", element)

        time.sleep(5)

        # Open slide type dropdown
        self.driver.find_element(By.CSS_SELECTOR, ".chakra-menu__menu-button").click()
        
        # Click Traditional slide type
        self.driver.find_element(By.XPATH, "//button[@data-index=\'1\' and contains(@class, \'chakra-menu__menuitem\')]").click()
        
        # Click Continue (on slide creation page 1)
        # self.driver.find_element(By.CSS_SELECTOR, ".css-1d29g0s").click()
        self.driver.find_element(By.XPATH, "//button[contains(., \'Continue\')]").click()
        
        time.sleep(5)

        # Click Preserve
        # self.driver.find_element(By.CSS_SELECTOR, ".css-1udzhhc:nth-child(3)").click()
        self.driver.find_element(By.XPATH, "//button[contains(., \'Preserve\')]").click()
        
        # Click Image Settings accordion
        self.driver.find_element(By.XPATH, "//button[@data-testid=\'image-settings-group\']/div/div[2]/p").click()
        
        # Click AI images dropdown
        self.driver.find_element(By.XPATH, "//button[span[contains(., \"AI images\")] and contains(@class, \"chakra-button chakra-menu__menu-button\")]").click()
        
        # Click Automatic images
        self.driver.find_element(By.XPATH, "//button[span[contains(., \"Automatic\")] and contains(@class, \"chakra-menu__menuitem\")]").click()
        
        # Click add card until 40 cards
        try:
            self.driver.find_element(By.CSS_SELECTOR, ".css-1ocosi5:nth-child(3)").click()
            self.driver.find_element(By.CSS_SELECTOR, ".css-1ocosi5:nth-child(3)").click()
            self.driver.find_element(By.CSS_SELECTOR, ".css-1ocosi5:nth-child(3)").click()
            self.driver.find_element(By.CSS_SELECTOR, ".css-1ocosi5:nth-child(3)").click()
            self.driver.find_element(By.CSS_SELECTOR, ".fa-plus").click()
            self.driver.find_element(By.CSS_SELECTOR, ".fa-plus").click()
            self.driver.find_element(By.CSS_SELECTOR, ".fa-plus").click()
            self.driver.find_element(By.CSS_SELECTOR, ".fa-plus").click()
            self.driver.find_element(By.CSS_SELECTOR, ".fa-plus").click()
            self.driver.find_element(By.CSS_SELECTOR, ".fa-plus").click()
            self.driver.find_element(By.CSS_SELECTOR, ".fa-plus").click()
            self.driver.find_element(By.CSS_SELECTOR, ".fa-plus").click()
        except Exception as e:
            print(e)
        
        # Click Continue (on slide creation page 2)
        # self.driver.find_element(By.CSS_SELECTOR, ".css-446ahm").click()
        self.driver.find_element(By.XPATH, "//button[contains(., \'Continue\')]").click()

        self.driver.execute_script("window.scrollTo(0,52)")
        
        time.sleep(3)

        # Click Custom Theme tab item
        # self.driver.find_element(By.CSS_SELECTOR, ".css-mlhvzo").click()
        self.driver.find_element(By.XPATH, "//button[contains(., \'Custom\')]").click()
        
        time.sleep(3)
        
        # Click EC Theme
        self.driver.find_element(By.XPATH, "//p[contains(., \'EC Theme\')]").click()
        
        # Click Generate
        # self.driver.find_element(By.CSS_SELECTOR, ".css-446ahm").click()
        self.driver.find_element(By.XPATH, "//button[contains(., \'Generate\')]").click()
        
        # 35 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 36 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 37 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 38 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 39 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 40 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 41 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 42 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 43 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 44 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 45 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 46 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 47 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 48 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 49 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 50 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 51 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 52 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 53 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 54 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 55 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 56 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 57 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 58 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 59 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 60 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 61 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 62 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 63 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 64 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")
        # 65 | runScript | window.scrollTo(0,0) | 
        self.driver.execute_script("window.scrollTo(0,0)")

        time.sleep(10)
        return self.driver.current_url

Slides = GammaSlideCreator()
Slides.setup_method()
Slides.create_slides()